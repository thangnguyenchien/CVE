#include <assert.h>
#include "DynLibResolver.h"
#include "StringCrypt.h"
#include "Random.h"
#include "MemOps.h"

static const char alphanum[] =
"0123456789"
"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
"abcdefghijklmnopqrstuvwxyz";

DWORD GetRandomSeed()
{
	return ((fp_GetTickCount)ResolveModuleFunction(XorDecryptString(p_ModuleTable[ModuleEntry::_Kernel32]),
		XorDecryptString(p_FunctionTable[FunctionEntry::_GetTickCount])))();
}

char* GenerateRandomString(DWORD seed, size_t len, char* p_buffer)
{
	size_t i;
	unsigned int a;

	for (i = 0; i < len - 1; i++)
	{
		a = i % 2 == 0 ? _rotl(seed, i) : _rotr(seed, i);
		*(PBYTE)(p_buffer + i) = (BYTE)alphanum[a % (sizeof(alphanum) - 1)];
	}
	return p_buffer;
}